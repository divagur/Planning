//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Planning
{
    using System;
    using System.Collections.Generic;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Linq.Expressions;

    public partial class PlanningDbContext : DbContext
    {
        public PlanningDbContext()
            : base("name=PlanningDbContext")
        {
        }
    
    	 public PlanningDbContext(string connectionString)
            : base(connectionString)
        {
    	}
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DelayReason> DelayReasons { get; set; }
        public virtual DbSet<Depositor> Depositors { get; set; }
        public virtual DbSet<Gateway> Gateways { get; set; }
        public virtual DbSet<OperType> OperTypes { get; set; }
        public virtual DbSet<ShipmentOrder> ShipmentOrders { get; set; }
        public virtual DbSet<Shipment> Shipments { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserGroup> UserGroups { get; set; }
        public virtual DbSet<TimeSlot> TimeSlots { get; set; }
        public virtual DbSet<LvAttr> LvAttrs { get; set; }
        public virtual DbSet<ShipmentElement> ShipmentElements { get; set; }
        public virtual DbSet<TransportCompany> TransportCompanies { get; set; }
        public virtual DbSet<TransportType> TransportTypes { get; set; }
        public virtual DbSet<UserGrpPrvlg> UserGrpPrvlgs { get; set; }
        public virtual DbSet<Function> Functions { get; set; }
        /*
        public void ReloadNavigationProperty<TEntity, TElement>(
        this DbContext context,
        TEntity entity,
        Expression<Func<TEntity, ICollection<TElement>>> navigationProperty)
        where TEntity : class
        where TElement : class
        {
            context.Entry(entity).Collection<TElement>(navigationProperty).Query();
        }
        */
        public void RefreshAll()
        {
            foreach (var entity in this.ChangeTracker.Entries())
            {
                entity.Reload();
            }
        }

        public void RefreshEntity(DbEntityEntry entity)
        {

                entity.Reload();

        }
    }
}
